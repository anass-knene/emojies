{"version":3,"sources":["components/EmojiItem.js","components/EmojiContainer.js","components/Header.js","App.js","index.js"],"names":["EmojiItem","props","keyword","symbol","className","EmojiContainer","console","log","emojisList","map","emoji","keywords","title","Header","href","target","App","useState","emojiList","setEmojisList","type","name","onChange","e","value","searchedEmojis","filter","includes","reactDOM","render","document","getElementById"],"mappings":"qLAGe,SAASA,EAAUC,GAChC,OACE,cAAC,IAAD,CAAgBC,QAASD,EAAME,OAA/B,SACE,qBAAKC,UAAU,YAAf,SACE,6BAAKH,EAAME,aCJJ,SAASE,EAAeJ,GAErC,OADAK,QAAQC,IAAIN,GAEV,qBAAKG,UAAU,QAAf,SACGH,EAAMO,WAAWC,KAAI,SAACC,GACrB,OACE,cAACV,EAAD,CAEEG,OAAQO,EAAMP,OACdQ,SAAUD,EAAMC,SAChBC,MAAOF,EAAME,OAHRF,EAAME,Y,WCRR,SAASC,IACtB,OACE,sBAAKT,UAAU,SAAf,UACE,+CACe,mDAEf,iFACA,8BACE,cAAC,IAAD,CACEU,KAAK,iCACLC,OAAO,SACP,mBAAiB,EACjB,YAAU,QACV,YAAU,OACV,YAAU,eANZ,kBAUA,cAAC,IAAD,CACED,KAAK,iCACLC,OAAO,SACP,mBAAiB,EACjB,YAAU,QACV,YAAU,OACV,YAAU,sBANZ,wB,WCMOC,MArBf,WACE,MAAoCC,mBAASC,GAA7C,mBAAOV,EAAP,KAAmBW,EAAnB,KASA,OACE,sBAAKf,UAAU,MAAf,UACE,cAACS,EAAD,IACA,qBAAKT,UAAU,SAAf,SACE,uBAAOgB,KAAK,OAAOC,KAAK,SAASC,SAXlB,SAACC,GACpBjB,QAAQC,IAAIgB,EAAER,OAAOS,OACrB,IAAIC,EAAiBP,EAAUQ,QAAO,SAAChB,GAAD,OACpCA,EAAMC,SAASgB,SAASJ,EAAER,OAAOS,UAEnCL,EAAcM,QAQZ,cAACpB,EAAD,CAAgBG,WAAYA,Q,cChBlCoB,EAASC,OAAO,cAAC,EAAD,IAAOC,SAASC,eAAe,U","file":"static/js/main.6542f45e.chunk.js","sourcesContent":["import React from \"react\";\nimport \"./style.scss\";\nimport ReactClipboard from \"react-clipboard-simple\";\nexport default function EmojiItem(props) {\n  return (\n    <ReactClipboard keyword={props.symbol}>\n      <div className=\"emojiList\">\n        <h1>{props.symbol}</h1>\n      </div>\n    </ReactClipboard>\n  );\n}\n","import React from \"react\";\nimport EmojiItem from \"./EmojiItem\";\n\nexport default function EmojiContainer(props) {\n  console.log(props);\n  return (\n    <div className=\"emoji\">\n      {props.emojisList.map((emoji) => {\n        return (\n          <EmojiItem\n            key={emoji.title}\n            symbol={emoji.symbol}\n            keywords={emoji.keywords}\n            title={emoji.title}\n          />\n        );\n      })}\n    </div>\n  );\n}\n","import React from \"react\";\nimport GitHubButton from \"react-github-btn\";\nexport default function Header() {\n  return (\n    <div className=\"header\">\n      <h1>\n        Search Emoji <span>&#x1F984;</span>\n      </h1>\n      <p>Simple React Tool for search emoji with React JS</p>\n      <p>\n        <GitHubButton\n          href=\"https://github.com/anass-knene\"\n          target=\"_blank\"\n          data-show-count={true}\n          data-size=\"large\"\n          data-text=\"star\"\n          data-icon=\"octicon-star\"\n        >\n          Star\n        </GitHubButton>\n        <GitHubButton\n          href=\"https://github.com/anass-knene\"\n          target=\"_blank\"\n          data-show-count={true}\n          data-size=\"large\"\n          data-text=\"form\"\n          data-icon=\"octicon-repo-forked\"\n        >\n          Fork\n        </GitHubButton>\n      </p>\n    </div>\n  );\n}\n","import React, { useState } from \"react\";\nimport EmojiContainer from \"./components/EmojiContainer\";\nimport Header from \"./components/Header\";\nimport emojiList from \"./json/emoji.json\";\nimport \"./components/style.scss\";\nfunction App() {\n  const [emojisList, setEmojisList] = useState(emojiList);\n\n  const searchEmojis = (e) => {\n    console.log(e.target.value);\n    let searchedEmojis = emojiList.filter((emoji) =>\n      emoji.keywords.includes(e.target.value)\n    );\n    setEmojisList(searchedEmojis);\n  };\n  return (\n    <div className=\"App\">\n      <Header />\n      <div className=\"search\">\n        <input type=\"text\" name=\"search\" onChange={searchEmojis} />\n      </div>\n      <EmojiContainer emojisList={emojisList} />\n    </div>\n  );\n}\n\nexport default App;\n","\nimport React from \"react\"\nimport App from \"./App.js\"\nimport reactDOM from \"react-dom\"\n\nreactDOM.render(<App/>,document.getElementById(\"root\"))"],"sourceRoot":""}